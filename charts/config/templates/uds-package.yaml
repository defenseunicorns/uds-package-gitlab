apiVersion: uds.dev/v1alpha1
kind: Package
metadata:
  name: gitlab
  namespace: {{ .Release.Namespace }}
spec:
  {{- if .Values.sso }}
  sso:
    - name: Gitlab SSO
      clientId: uds-core-gitlab
      redirectUris:
        - "https://gitlab.{{ .Values.domain }}/users/auth/openid_connect/callback"
  {{- end }}
  network:
    expose:
      - service: gitlab-webservice-default
        selector:
          app: webservice
        host: gitlab
        gateway: tenant
        port: 8181
      - service: gitlab-gitlab-pages
        selector:
          app: gitlab-pages
        host: "*.pages"
        gateway: tenant
        port: 8090
      - service: gitlab-registry
        selector:
          app: registry
        host: registry
        gateway: tenant
        port: 5000
    allow:
      - direction: Ingress
        remoteGenerated: IntraNamespace

    # ingress from runner only if runner lives in cluster. Otherwise, it goes through the gateway
    {{- if .Values.runner.internal }}
      - direction: Ingress
        selector:
          app: webservice
        remoteNamespace: {{ .Values.runner.namespace | quote }}
        remoteSelector:
          {{ .Values.runner.selector | toYaml | nindent 10 }}
        port: 8181
        description: "Runner Ingress Workhorse"
    {{- end }}

      - direction: Ingress
        remoteNamespace: monitoring
        remoteSelector:
          app: prometheus
        selector:
          app: gitlab-exporter
        port: 9168
        description: "Monitoring Exporter"

      - direction: Egress
        selector:
          app: registry
        {{- if .Values.storage.internal }}
        remoteNamespace: {{ .Values.storage.namespace | quote }}
        remoteSelector:
          {{ .Values.storage.selector | toYaml | nindent 10 }}
        port: {{ .Values.storage.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Registry Storage"

      # Sidekiq Netpols 
      - direction: Egress
        selector:
          app: sidekiq
        {{- if .Values.storage.internal }}
        remoteNamespace: {{ .Values.storage.namespace | quote }}
        remoteSelector:
          {{ .Values.storage.selector | toYaml | nindent 10 }}
        port: {{ .Values.storage.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Sidekiq Storage"

      - direction: Egress
        selector:
          app: sidekiq
        {{- if .Values.redis.internal }}
        remoteNamespace: {{ .Values.redis.namespace | quote }}
        remoteSelector:
          {{ .Values.redis.selector | toYaml | nindent 10 }}
        port: {{ .Values.redis.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Sidekiq Redis"

      - direction: Egress
        selector:
          app: sidekiq
        {{- if .Values.postgres.internal }}
        remoteNamespace: {{ .Values.postgres.namespace | quote }}
        remoteSelector:
          {{ .Values.postgres.selector | toYaml | nindent 10 }}
        port: {{ .Values.postgres.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Sidekiq Postgres"

      # Migrations Netpols
      - direction: Egress
        selector:
          app: migrations
        {{- if .Values.postgres.internal }}
        remoteNamespace: {{ .Values.postgres.namespace | quote }}
        remoteSelector:
          {{ .Values.postgres.selector | toYaml | nindent 10 }}
        port: {{ .Values.postgres.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Migrations Postgres"

      - direction: Egress
        selector:
          app: migrations
        {{- if .Values.redis.internal }}
        remoteNamespace: {{ .Values.redis.namespace | quote }}
        remoteSelector:
          {{ .Values.redis.selector | toYaml | nindent 10 }}
        port: {{ .Values.redis.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Migrations Redis"

      # Toolbox Netpols
      - direction: Egress
        selector:
          app: toolbox
        {{- if .Values.storage.internal }}
        remoteNamespace: {{ .Values.storage.namespace | quote }}
        remoteSelector:
          {{ .Values.storage.selector | toYaml | nindent 10 }}
        port: {{ .Values.storage.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Toolbox Storage"

      - direction: Egress
        selector:
          app: toolbox
        {{- if .Values.postgres.internal }}
        remoteNamespace: {{ .Values.postgres.namespace | quote }}
        remoteSelector:
          {{ .Values.postgres.selector | toYaml | nindent 10 }}
        port: {{ .Values.postgres.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Toolbox Postgres"

      - direction: Egress
        selector:
          app: toolbox
        {{- if .Values.redis.internal }}
        remoteNamespace: {{ .Values.redis.namespace | quote }}
        remoteSelector:
          {{ .Values.redis.selector | toYaml | nindent 10 }}
        port: {{ .Values.redis.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Toolbox Redis"

      # Gitlab Netpols
      - direction: Egress
        remoteGenerated: IntraNamespace

      - direction: Egress
        selector:
          app: gitlab
        remoteGenerated: KubeAPI


      # Webservice Netpols
      - direction: Egress
        selector:
          app: webservice
        port: 443
        description: "SSO"

      - direction: Egress
        selector:
          app: webservice
        {{- if .Values.storage.internal }}
        remoteNamespace: {{ .Values.storage.namespace | quote }}
        remoteSelector:
          {{ .Values.storage.selector | toYaml | nindent 10 }}
        port: {{ .Values.storage.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Webservice Storage"

      - direction: Egress
        selector:
          app: webservice
        {{- if .Values.redis.internal }}
        remoteNamespace: {{ .Values.redis.namespace | quote }}
        remoteSelector:
          {{ .Values.redis.selector | toYaml | nindent 10 }}
        port: {{ .Values.redis.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Webservice Redis"

      - direction: Egress
        selector:
          app: webservice
        {{- if .Values.postgres.internal }}
        remoteNamespace: {{ .Values.postgres.namespace | quote }}
        remoteSelector:
          {{ .Values.postgres.selector | toYaml | nindent 10 }}
        port: {{ .Values.postgres.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Webservice Postgres"


      # Gitlab Pages
      - direction: Ingress
        selector:
          app: gitlab-pages
        port: 8090
        description: GitLab Pages Ingress

      - direction: Egress
        selector:
          app: gitlab-pages
        {{- if .Values.storage.internal }}
        remoteNamespace: {{ .Values.storage.namespace | quote }}
        remoteSelector:
          {{ .Values.storage.selector | toYaml | nindent 10 }}
        port: {{ .Values.storage.port }}
        {{- else }}
        remoteGenerated: Anywhere
        {{- end }}
        description: "Gitlab Pages Storage"

      # Custom rules for unanticipated scenarios
      {{- range .Values.custom }}
      - direction: {{ .direction }}
        selector:
          {{ .selector | toYaml | nindent 10 }}
        {{- if not .remoteGenerated }}
        remoteNamespace: {{ .remoteNamespace }}
        remoteSelector:
          {{ .remoteSelector | toYaml | nindent 10 }}
        port: {{ .port }}
        {{- else }}
        remoteGenerated: {{ .remoteGenerated }}
        {{- end }}
        description: {{ .description }}
      {{- end }}
