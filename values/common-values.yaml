global:
  image:
    pullPolicy: IfNotPresent

  ingress:
    configureCertmanager: false

  kas:
    enabled: false

  hosts:
    domain: ###ZARF_VAR_DOMAIN###
    gitlab:
      name: gitlab.###ZARF_VAR_DOMAIN###
    registry:
      name: registry.###ZARF_VAR_DOMAIN###
    pages:
      name: pages.###ZARF_VAR_DOMAIN###
  psql:
    host: ###ZARF_VAR_GITLAB_DB_ENDPOINT###
    port: 5432
    username: ###ZARF_VAR_GITLAB_DB_USERNAME###
    database: ###ZARF_VAR_GITLAB_DB_NAME###
    password:
      useSecret: true
      secret: gitlab-postgres
      key: password

  redis:
    scheme: ###ZARF_VAR_GITLAB_REDIS_SCHEME###
    host: ###ZARF_VAR_GITLAB_REDIS_ENDPOINT###
    port: 6379
    auth:
      enabled: true
      secret: gitlab-redis
      key: password

  minio:
    enabled: false
    credentials:
      {}
      # secret:

  appConfig:
    object_store:
      enabled: true
      proxy_download: true
      connection:
        secret: gitlab-object-store
        key: connection
    lfs:
      bucket: ###ZARF_VAR_BUCKET_PREFIX###gitlab-lfs###ZARF_VAR_BUCKET_SUFFIX###
    artifacts:
      bucket: ###ZARF_VAR_BUCKET_PREFIX###gitlab-artifacts###ZARF_VAR_BUCKET_SUFFIX###
    uploads:
      bucket: ###ZARF_VAR_BUCKET_PREFIX###gitlab-uploads###ZARF_VAR_BUCKET_SUFFIX###
    packages:
      bucket: ###ZARF_VAR_BUCKET_PREFIX###gitlab-packages###ZARF_VAR_BUCKET_SUFFIX###
    externalDiffs:
      bucket: ###ZARF_VAR_BUCKET_PREFIX###gitlab-mr-diffs###ZARF_VAR_BUCKET_SUFFIX###
    terraformState:
      bucket: ###ZARF_VAR_BUCKET_PREFIX###gitlab-terraform-state###ZARF_VAR_BUCKET_SUFFIX###
    ciSecureFiles:
      bucket: ###ZARF_VAR_BUCKET_PREFIX###gitlab-ci-secure-files###ZARF_VAR_BUCKET_SUFFIX###
    dependencyProxy:
      bucket: ###ZARF_VAR_BUCKET_PREFIX###gitlab-dependency-proxy###ZARF_VAR_BUCKET_SUFFIX###
    backups:
      bucket: ###ZARF_VAR_BUCKET_PREFIX###gitlab-backups###ZARF_VAR_BUCKET_SUFFIX###
      tmpBucket: ###ZARF_VAR_BUCKET_PREFIX###gitlab-tmp###ZARF_VAR_BUCKET_SUFFIX###
    ## https://docs.gitlab.com/charts/charts/globals#omniauth
    omniauth:
      enabled: true
      allowSingleSignOn: ['openid_connect']
      blockAutoCreatedUsers: false
      autoLinkUser: true
      autoSignInWithProvider: openid_connect
      externalProviders: []
      syncProfileAttributes: ['email']
      syncProfileFromProvider: []
      providers:
        - secret: gitlab-sso-provider-json
          key: providers
    initialDefaults:
      signupEnabled: ###ZARF_VAR_GITLAB_SIGNUP_ENABLED###

  registry:
    bucket: ###ZARF_VAR_BUCKET_PREFIX###gitlab-registry###ZARF_VAR_BUCKET_SUFFIX###
    relativeurls: true

  pages:
    enabled: ###ZARF_VAR_GITLAB_PAGES_ENABLED###
    objectStore:
      bucket: ###ZARF_VAR_BUCKET_PREFIX###gitlab-pages###ZARF_VAR_BUCKET_SUFFIX###

  ## https://docs.gitlab.com/charts/charts/globals#service-accounts
  serviceAccount:
    enabled: true
    create: true
    annotations: {}
    ## Name to be used for serviceAccount, otherwise defaults to chart fullname
    # name:

postgresql:
  install: false
redis:
  install: false
registry:
  storage:
    redirect:
      disable: ###ZARF_VAR_DISABLE_REGISTRY_REDIRECT###
    secret: gitlab-object-store
    key: registry
  metrics:
    enabled: true
    serviceMonitor: # TODO configure for Prometheus
      enabled: true

gitlab:
  toolbox:
    backups:
      config:
        secret: gitlab-object-store
        key: backups

  gitlab-exporter:
    enabled: true
    metrics: # TODO add Prometheus

  migrations:
    resources:
      limits:
        cpu: 500m
        memory: 4G

  webservice:
    ingress:
      enabled: false # Local setting in subchart must be overridden
    metrics: # TODO add Prometheus
      enabled: true
      port: 8083
      serviceMonitor:
        enabled: true
    workhorse:
      metrics:
        enabled: true

certmanager:
  install: false

gitlab-runner:
  install: false

prometheus:
  install: false

nginx-ingress: &nginx-ingress
  enabled: false

domain: ###ZARF_VAR_DOMAIN###
